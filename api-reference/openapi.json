{
  "openapi": "3.1.0",
  "info": {
    "title": "Webhook Umpi Checkout",
    "description": "Esta documentação serve como um guia para a integração e uso dos Webhooks, detalhando seus eventos e funcionamento.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "webhooks": {
    "/CHECKOUT_ABANDONED": {
      "get": {
        "description": "Este evento do Webhook é acionado quando um cliente preenche pelo menos o campo de email em um formulário e aguarda um período mínimo de 5 minutos antes de uma ação subsequente ser realizada.",
        "responses": {
          "204": {
            "description": "retorno do webhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_checkout_abandoned"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/PAYMENT_PAID": {
      "get": {
        "description": "Este evento do webhook é acionado após a confirmação do pagamento. Ele aguarda o retorno da operadora do cartão e é disparado quando o pagamento é aceito com sucesso.",
        "responses": {
          "204": {
            "description": "retorno do webhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_payment_paid"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/PAYMENT_PENDING": {
      "get": {
        "description": "Este evento do webhook é acionado quando o pagamento ainda está pendente, aguardando confirmação da operadora do cartão ou outro método de pagamento.",
        "responses": {
          "204": {
            "description": "retorno do webhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_payment_pending"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/PAYMENT_REFUSED": {
      "get": {
        "description": "Este evento do webhook é acionado quando o pagamento é recusado pela operadora do cartão ou outro método de pagamento.",
        "responses": {
          "204": {
            "description": "retorno do webhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_payment_refused"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/CHARGEBACK": {
      "get": {
        "description": "Este evento do webhook é acionado quando o pagamento é extornado pela operadora do cartão ou outro método de pagamento.",
        "responses": {
          "204": {
            "description": "retorno do webhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_chargeback"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/TRACKING_FOUND": {
      "get": {
        "description": "Este evento do webhook é acionado quando o rastreio é encontrado.",
        "responses": {
          "204": {
            "description": "retorno do webhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_tracking_found"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "webhook_response": {
        "required": ["transactionId"],
        "type": "object",
        "properties": {
          "transaction": {
            "properties": {
              "transaction": {
                "description": "Informações da transação",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "ID único da transação",
                    "type": "string",
                    "example": "12345"
                  },
                  "shopId": {
                    "description": "ID da loja associada",
                    "type": "string",
                    "example": "shop_001"
                  },
                  "status": {
                    "description": "Status da transação",
                    "type": "string",
                    "example": "PENDING"
                  },
                  "paidAt": {
                    "description": "Data do pagamento (se realizado)",
                    "type": "string",
                    "nullable": true,
                    "example": null
                  },
                  "ip": {
                    "description": "IP do cliente",
                    "type": "string",
                    "nullable": true,
                    "example": "192.168.0.1"
                  },
                  "TransactionItem": {
                    "description": "Itens da transação",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "ID do item",
                          "type": "string",
                          "example": "item_001"
                        },
                        "name": {
                          "description": "Nome do item",
                          "type": "string",
                          "example": "Produto 1"
                        },
                        "quantity": {
                          "description": "Quantidade do item",
                          "type": "number",
                          "example": 2
                        },
                        "price": {
                          "description": "Preço unitário do item",
                          "type": "number",
                          "example": 50.0
                        },
                        "total": {
                          "description": "Total do item (quantidade * preço)",
                          "type": "number",
                          "example": 100.0
                        }
                      }
                    }
                  },
                  "TransactionShipping": {
                    "description": "Informações de envio da transação",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "ID do envio",
                        "type": "string",
                        "example": "shipping_001"
                      },
                      "street": {
                        "description": "Rua de envio",
                        "type": "string",
                        "example": "Rua Exemplo"
                      },
                      "streetNumber": {
                        "description": "Número da rua",
                        "type": "string",
                        "example": "123"
                      },
                      "complement": {
                        "description": "Complemento do endereço",
                        "type": "string",
                        "example": "Apto 101"
                      },
                      "neighborhood": {
                        "description": "Bairro de envio",
                        "type": "string",
                        "example": "Centro"
                      },
                      "city": {
                        "description": "Cidade de envio",
                        "type": "string",
                        "example": "Belo Horizonte"
                      },
                      "state": {
                        "description": "Estado de envio",
                        "type": "string",
                        "example": "MG"
                      },
                      "country": {
                        "description": "País de envio",
                        "type": "string",
                        "example": "Brasil"
                      },
                      "zipCode": {
                        "description": "CEP de envio",
                        "type": "string",
                        "example": "30130000"
                      }
                    }
                  },
                  "TransactionCard": {
                    "description": "Informações do cartão de crédito",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "ID do cartão",
                        "type": "string",
                        "example": "card_001"
                      },
                      "holderName": {
                        "description": "Nome do titular do cartão",
                        "type": "string",
                        "example": "João Silva"
                      },
                      "lastDigits": {
                        "description": "Últimos 4 dígitos do cartão",
                        "type": "string",
                        "example": "1234"
                      },
                      "brand": {
                        "description": "Marca do cartão",
                        "type": "string",
                        "example": "Visa"
                      },
                      "expirationMonth": {
                        "description": "Mês de expiração do cartão",
                        "type": "number",
                        "example": 12
                      },
                      "expirationYear": {
                        "description": "Ano de expiração do cartão",
                        "type": "number",
                        "example": 2025
                      }
                    }
                  },
                  "TransactionPix": {
                    "description": "Informações do pagamento via PIX",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "ID do pagamento via PIX",
                        "type": "string",
                        "example": "pix_001"
                      },
                      "qrCode": {
                        "description": "Código QR do pagamento via PIX",
                        "type": "string",
                        "example": "abcd1234efgh5678"
                      },
                      "paymentStatus": {
                        "description": "Status do pagamento via PIX",
                        "type": "string",
                        "example": "PENDING"
                      }
                    }
                  },
                  "Shop": {
                    "description": "Informações da loja",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "ID da loja",
                        "type": "string",
                        "example": "shop_001"
                      },
                      "name": {
                        "description": "Nome da loja",
                        "type": "string",
                        "example": "Loja Exemplo"
                      },
                      "email": {
                        "description": "Email da loja",
                        "type": "string",
                        "example": "loja@exemplo.com"
                      },
                      "domain": {
                        "description": "Domínio da loja",
                        "type": "string",
                        "example": "lojaexemplo.com"
                      },
                      "state": {
                        "description": "Estado da loja",
                        "type": "string",
                        "example": "MG"
                      },
                      "country": {
                        "description": "País da loja",
                        "type": "string",
                        "example": "Brasil"
                      },
                      "countryCode": {
                        "description": "Código do país",
                        "type": "string",
                        "example": "BR"
                      },
                      "address1": {
                        "description": "Endereço principal",
                        "type": "string",
                        "example": "Rua Principal, 100"
                      },
                      "address2": {
                        "description": "Endereço complementar",
                        "type": "string",
                        "example": "Andar 2"
                      },
                      "zip": {
                        "description": "CEP da loja",
                        "type": "string",
                        "example": "30130000"
                      },
                      "city": {
                        "description": "Cidade da loja",
                        "type": "string",
                        "example": "Belo Horizonte"
                      },
                      "phone": {
                        "description": "Telefone da loja",
                        "type": "string",
                        "example": "+55 31 98765-4321"
                      },
                      "documentNumber": {
                        "description": "Número do documento da loja",
                        "type": "string",
                        "example": "12345678901"
                      },
                      "companyName": {
                        "description": "Razão social da empresa",
                        "type": "string",
                        "example": "Loja Exemplo Ltda"
                      },
                      "logoUrl": {
                        "description": "URL do logotipo da loja",
                        "type": "string",
                        "example": "https://lojaexemplo.com/logo.png"
                      }
                    }
                  }
                }
              }
            }
          },
          "status": {
            "description": "Status da transação",
            "type": "string",
            "example": "PENDING"
          },
          "paidAt": {
            "description": "Data do pagamento (se realizado)",
            "type": "string",
            "nullable": true,
            "example": null
          },
         "ip": {
            "description": "IP do cliente",
            "type": "string",
            "nullable": true,
            "example": "192.168.0.1"
          },
          "tracking": {
            "description": "Dados de rastreamento de marketing",
            "type": "object",
            "properties": {
             "utmSource": {
              "description": "Origem da campanha",
              "type": "string",
              "example": "google"
            },
            "utmMedium": {
              "description": "Meio da campanha",
              "type": "string",
              "example": "cpc"
            },
            "utmCampaign": {
              "description": "Nome da campanha",
              "type": "string",
              "example": "promo_summer"
            },
            "utmContent": {
              "description": "Conteúdo da campanha",
              "type": "string",
              "example": "banner_azul"
            },
            "utmTerm": {
              "description": "Palavra-chave da campanha",
              "type": "string",
              "example": "desconto_50"
            }
            }
          }
        }
      },
      "webhook_chargeback": {
        "allOf": [
            
          {
            "required": ["transactionId"],
            "type": "object",
            "properties": {
              "event": {
                "description": "Tipo de evento",
                "type": "string",
                "example": "CHARGEBACK"
              }
            }
          },
          {
            "$ref": "#/components/schemas/webhook_response"
          }
        ]
      },
      "webhook_checkout_abandoned": {
        "allOf": [
            
          {
            "required": ["transactionId"],
            "type": "object",
            "properties": {
              "event": {
                "description": "Tipo de evento",
                "type": "string",
                "example": "CHECKOUT_ABANDONED"
              }
            }
          },
          {
            "$ref": "#/components/schemas/webhook_response"
          }
        ]
      },
      "webhook_payment_paid": {
        "allOf": [
            
          {
            "required": ["transactionId"],
            "type": "object",
            "properties": {
              "event": {
                "description": "Tipo de evento",
                "type": "string",
                "example": "PAYMENT_PAID"
              }
            }
          },
          {
            "$ref": "#/components/schemas/webhook_response"
          }
        ]
      },
      "webhook_payment_refused": {
        "allOf": [
            
          {
            "required": ["transactionId"],
            "type": "object",
            "properties": {
              "event": {
                "description": "Tipo de evento",
                "type": "string",
                "example": "PAYMENT_REFUSED"
              }
            }
          },
          {
            "$ref": "#/components/schemas/webhook_response"
          }
        ]
      },
      "webhook_payment_pending": {
        "allOf": [
          {
            "required": ["transactionId"],
            "type": "object",
            "properties": {
              "event": {
                "description": "Tipo de evento",
                "type": "string",
                "example": "PAYMENT_PENDING"
              }
            }
          },
          {
            "$ref": "#/components/schemas/webhook_response"
          }
        ]
      },
      "webhook_tracking_found": {
        "allOf": [
          {
            "required": ["transactionId"],
            "type": "object",
            "properties": {
              "event": {
                "description": "Tipo de evento",
                "type": "string",
                "example": "TRACKING_FOUND"
              }
            }
          },
          {
            "$ref": "#/components/schemas/webhook_response"
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
